#!/usr/bin/env python3

import re

from argparse import ArgumentParser


def get_options():
    parser = ArgumentParser()
    parser.add_argument("-f", "--file", type=str, default="", help="tetra file channel informations", required=True)
    parser.add_argument("-t", "--tower", type=str, default="", help="Tower Id", required=True)
    parser.add_argument("-m", "--demodulation", type=str, default="", help="Demodulation options", required=True)
    parser.add_argument("-s", "--saveto", type=str, default="/tmp/tetrapol-helper", help="Save result to", required=False)
    parser.add_argument("-e", "--exclude", type=str, default="", help="Exclude channels", required=False)

    options = parser.parse_args()

    return options


def getTowerInformations(options):
    with open(options.file) as f:
        lines = f.readlines()

        for line in lines:
            line = re.sub(" +", " ", line.strip())
            if line:
              infos = line.split(" ")
              if infos[0] == options.tower:
                return infos

        return None


def getSteps(options, infos):

    channels = infos[1:]

    if options.exclude:
        for exclude in options.exclude.split(','):
            channels.remove(exclude)

    steps = f"""# Generated by tetrapol-helper
# Get tetrapol informations for {options.tower} tower

# == Requirements installation ==
# All installations will be done on the {options.saveto} (mkdir {options.saveto})
# Thank syracuse for demod_syracuse.py project 
# Thank mrousse83 for the TETRAPOL Dump Analyzer project 
mkdir -p {options.saveto} && cd {options.saveto} 
# Download manually "pack_tplm_v831.zip" from this URL https://forum.tetrahub.net/download/file.php?id=737
wget https://www.cjoint.com/doc/23_04/MDxqjcBJdcH_tda-analyse-cellule.zip
unzip {options.saveto}/*.zip

# Fifo creation (for demoluation)
rm -f {options.saveto}/channel{infos[1]}.bits && mkfifo {options.saveto}/channel{infos[1]}.bits
"""

    for tch in infos[2:]:
        if tch not in channels:
            continue
        
        steps += f"rm -f {options.saveto}/channel{tch}.bits && mkfifo {options.saveto}/channel{tch}.bits\n"

    steps += f"""
# == Demodulation ==
python3 demod_syracuse.py {options.demodulation} -c {",".join(channels)}

# == Decoding / Dump ==
# On terminal 1
tetrapol_dump -d DOWN -t CCH -i {options.saveto}/channel{infos[1]}.bits 2>&1 >/dev/null | python3 tda_analyse_cellule.py {infos[1]} 
"""

    tid = 2
    for tch in infos[2:]:
        if tch not in channels:
            continue

        steps += f"""
# On terminal {tid}
tetrapol_dump -d DOWN -t TCH -i {options.saveto}/channel{tch}.bits 2>&1 >/dev/null | python3 tda_analyse_cellule.py {tch}
"""

    print(steps)

if __name__ == '__main__':
    options = get_options()

    tinfos = getTowerInformations(options)
    if tinfos:
        getSteps(options, tinfos)